{"ast":null,"code":"var _jsxFileName = \"/home/alexxpain/shop/frontend/src/components/forms/ProductForm.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductForm = ({\n  onSubmit,\n  categories,\n  subcategories\n}) => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    control\n  } = useForm();\n  const handleFormSubmit = data => {\n    data.CategoryId = parseInt(data.CategoryId);\n    data.SubcategoryId = parseInt(data.SubcategoryId);\n    onSubmit(data); // Call the onSubmit prop with the form data\n    reset(); // Reset the form after submission\n  };\n\n  // Function to handle file input change\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    // You can handle the selected file here or upload it to your server\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(handleFormSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Product Name\",\n      ...register('name', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Product Description\",\n      ...register('description', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Product Price\",\n      ...register('price', {\n        required: true,\n        valueAsNumber: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\" // Accept only image files\n      ,\n      onChange: handleImageUpload // Handle file input change\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      ...register('CategoryId', {\n        required: true,\n        valueAsNumber: true\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: category.id,\n        children: category.name\n      }, category.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      ...register('SubcategoryId', {\n        required: true,\n        valueAsNumber: true\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Subcategory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), subcategories.map(subcategory => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: subcategory.id,\n        children: subcategory.name\n      }, subcategory.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductForm, \"7yik1GNM/rMKiOPrrZj1U/E6PJQ=\", false, function () {\n  return [useForm];\n});\n_c = ProductForm;\nexport default ProductForm;\nvar _c;\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"names":["React","useForm","Controller","jsxDEV","_jsxDEV","ProductForm","onSubmit","categories","subcategories","_s","register","handleSubmit","reset","control","handleFormSubmit","data","CategoryId","parseInt","SubcategoryId","handleImageUpload","event","file","target","files","children","type","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","valueAsNumber","accept","onChange","value","map","category","id","name","subcategory","_c","$RefreshReg$"],"sources":["/home/alexxpain/shop/frontend/src/components/forms/ProductForm.jsx"],"sourcesContent":["import React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\n\nconst ProductForm = ({ onSubmit, categories, subcategories }) => {\n    const { register, handleSubmit, reset, control } = useForm();\n    const handleFormSubmit = (data) => {\n        data.CategoryId = parseInt(data.CategoryId);\n        data.SubcategoryId = parseInt(data.SubcategoryId);\n        onSubmit(data); // Call the onSubmit prop with the form data\n        reset(); // Reset the form after submission\n    };\n\n    // Function to handle file input change\n    const handleImageUpload = (event) => {\n        const file = event.target.files[0];\n        // You can handle the selected file here or upload it to your server\n    };\n\n    return (\n        <form onSubmit={handleSubmit(handleFormSubmit)}>\n            <input\n                type=\"text\"\n                placeholder=\"Product Name\"\n                {...register('name', { required: true })}\n            />\n\n            <textarea\n                placeholder=\"Product Description\"\n                {...register('description', { required: true })}\n            />\n\n            <input\n                type=\"number\"\n                placeholder=\"Product Price\"\n                {...register('price', { required: true, valueAsNumber: true })}\n            />\n\n            {/* File input for Photograph URL */}\n            <input\n                type=\"file\"\n                accept=\"image/*\" // Accept only image files\n                onChange={handleImageUpload} // Handle file input change\n            />\n\n            <select {...register('CategoryId', { required: true, valueAsNumber: true })}>\n                <option value=\"\">Select Category</option>\n                {categories.map((category) => (\n                    <option key={category.id} value={category.id}>\n                        {category.name}\n                    </option>\n                ))}\n            </select>\n\n            <select {...register('SubcategoryId', { required: true, valueAsNumber: true })}>\n                <option value=\"\">Select Subcategory</option>\n                {subcategories.map((subcategory) => (\n                    <option key={subcategory.id} value={subcategory.id}>\n                        {subcategory.name}\n                    </option>\n                ))}\n            </select>\n\n            <button type=\"submit\">Add Product</button>\n        </form>\n    );\n};\n\nexport default ProductForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}