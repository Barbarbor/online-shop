{"ast":null,"code":"var _jsxFileName = \"/home/alexxpain/shop/frontend/src/components/ProductCard.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addToCart } from '../store/actions/cartActions';\nimport { likeProduct } from '../store/actions/likeActions'; // Import the like actions\nimport heart from '../icons/heart.svg';\nimport { ReactSVG } from 'react-svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductCard({\n  product\n}) {\n  _s();\n  const dispatch = useDispatch();\n  const likedProducts = useSelector(state => state.likes.products);\n  const isLiked = likedProducts.includes(product.id);\n  const handleLikeClick = () => {\n    dispatch(likeProduct(product.id));\n  };\n  const handleAddToCart = () => {\n    dispatch(addToCart(product));\n  };\n  const iconSize = 24; // Adjust the icon size here\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n      variant: \"top\",\n      src: `http://localhost:3001/media/${product.photography_url}`,\n      alt: product.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleAddToCart,\n        children: \"Add to Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), isLiked ? /*#__PURE__*/_jsxDEV(ReactSVG, {\n        onClick: handleLikeClick,\n        src: heart,\n        beforeInjection: svg => {\n          svg.setAttribute('width', iconSize);\n          svg.setAttribute('height', iconSize);\n          svg.setAttribute('fill', 'red');\n        },\n        alt: \"Liked\",\n        className: \"heart-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(ReactSVG, {\n        onClick: handleLikeClick,\n        src: heart,\n        beforeInjection: svg => {\n          svg.setAttribute('width', iconSize);\n          svg.setAttribute('height', iconSize);\n        },\n        alt: \"Like\",\n        className: \"heart-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(ProductCard, \"+hNAJSDb84NsXTcPLmayxghze2c=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ProductCard;\nexport default ProductCard;\nvar _c;\n$RefreshReg$(_c, \"ProductCard\");","map":{"version":3,"names":["React","Card","Button","useDispatch","useSelector","addToCart","likeProduct","heart","ReactSVG","jsxDEV","_jsxDEV","ProductCard","product","_s","dispatch","likedProducts","state","likes","products","isLiked","includes","id","handleLikeClick","handleAddToCart","iconSize","children","Img","variant","src","photography_url","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","onClick","beforeInjection","svg","setAttribute","className","_c","$RefreshReg$"],"sources":["/home/alexxpain/shop/frontend/src/components/ProductCard.jsx"],"sourcesContent":["import React from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addToCart } from '../store/actions/cartActions';\nimport { likeProduct } from '../store/actions/likeActions'; // Import the like actions\nimport heart from '../icons/heart.svg';\nimport { ReactSVG } from 'react-svg';\n\nfunction ProductCard({ product }) {\n    const dispatch = useDispatch();\n    const likedProducts = useSelector((state) => state.likes.products);\n\n    const isLiked = likedProducts.includes(product.id);\n\n    const handleLikeClick = () => {\n        dispatch(likeProduct(product.id));\n    };\n\n    const handleAddToCart = () => {\n        dispatch(addToCart(product));\n    };\n\n    const iconSize = 24; // Adjust the icon size here\n\n    return (\n        <Card>\n            <Card.Img variant=\"top\" src={`http://localhost:3001/media/${product.photography_url}`} alt={product.name} />\n            <Card.Body>\n                <Card.Title>{product.name}</Card.Title>\n                <Button onClick={handleAddToCart}>Add to Cart</Button>\n\n                {isLiked ? (\n                    <ReactSVG\n                        onClick={handleLikeClick}\n                        src={heart}\n                        beforeInjection={(svg) => {\n                            svg.setAttribute('width', iconSize);\n                            svg.setAttribute('height', iconSize);\n                            svg.setAttribute('fill', 'red');\n                        }}\n                        alt=\"Liked\"\n                        className=\"heart-icon\"\n                    />\n                ) : (\n                    <ReactSVG\n                        onClick={handleLikeClick}\n                        src={heart}\n                        beforeInjection={(svg) => {\n                            svg.setAttribute('width', iconSize);\n                            svg.setAttribute('height', iconSize);\n                        }}\n                        alt=\"Like\"\n                        className=\"heart-icon\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n}\n\nexport default ProductCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}