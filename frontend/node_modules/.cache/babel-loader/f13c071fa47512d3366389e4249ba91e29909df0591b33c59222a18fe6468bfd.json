{"ast":null,"code":"var _jsxFileName = \"/home/alexxpain/shop/frontend/src/components/admin/CategoryManagement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CategoryForm from './CategoryForm';\nimport axios from 'axios'; // Import Axios for making API requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryManagement = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    // Fetch categories from the API when the component mounts\n    fetchCategories();\n  }, []);\n  const fetchCategories = async () => {\n    try {\n      // Make a GET request to fetch categories from the API\n      const response = await axios.get('http://localhost:3001/api/categories'); // Replace with your API endpoint\n      setCategories(response.data);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    }\n  };\n  const addCategory = async newCategory => {\n    try {\n      // Make a POST request to add the new category to the database\n      const response = await axios.post('http://localhost:3001/api/categories', newCategory); // Replace with your API endpoint\n      setCategories([...categories, response.data]);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Category Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CategoryForm, {\n      onSubmit: addCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: category.name\n      }, category.category_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(CategoryManagement, \"+ijgB8ROEl0Dkz53OTIi8GynN6s=\");\n_c = CategoryManagement;\nexport default CategoryManagement;\nvar _c;\n$RefreshReg$(_c, \"CategoryManagement\");","map":{"version":3,"names":["React","useState","useEffect","CategoryForm","axios","jsxDEV","_jsxDEV","CategoryManagement","_s","categories","setCategories","fetchCategories","response","get","data","error","console","addCategory","newCategory","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","category","index","name","category_id","_c","$RefreshReg$"],"sources":["/home/alexxpain/shop/frontend/src/components/admin/CategoryManagement.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CategoryForm from './CategoryForm';\nimport axios from 'axios'; // Import Axios for making API requests\n\nconst CategoryManagement = () => {\n    const [categories, setCategories] = useState([]);\n\n    useEffect(() => {\n        // Fetch categories from the API when the component mounts\n        fetchCategories();\n    }, []);\n\n    const fetchCategories = async () => {\n        try {\n            // Make a GET request to fetch categories from the API\n            const response = await axios.get('http://localhost:3001/api/categories'); // Replace with your API endpoint\n            setCategories(response.data);\n        } catch (error) {\n            console.error('Error fetching categories:', error);\n        }\n    };\n\n    const addCategory = async (newCategory) => {\n        try {\n            // Make a POST request to add the new category to the database\n            const response = await axios.post('http://localhost:3001/api/categories', newCategory); // Replace with your API endpoint\n            setCategories([...categories, response.data]);\n        } catch (error) {\n            console.error('Error adding category:', error);\n        }\n    };\n\n    return (\n        <div className=\"category-management\">\n            <h1>Category Management</h1>\n            <CategoryForm onSubmit={addCategory} />\n            <ul>\n                {categories.map((category, index) => (\n                    <li key={category.category_id}>{category.name}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default CategoryManagement;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACZ;IACAS,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACA;MACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,sCAAsC,CAAC,CAAC,CAAC;MAC1EH,aAAa,CAACE,QAAQ,CAACE,IAAI,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACtD;EACJ,CAAC;EAED,MAAME,WAAW,GAAG,MAAOC,WAAW,IAAK;IACvC,IAAI;MACA;MACA,MAAMN,QAAQ,GAAG,MAAMR,KAAK,CAACe,IAAI,CAAC,sCAAsC,EAAED,WAAW,CAAC,CAAC,CAAC;MACxFR,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAEG,QAAQ,CAACE,IAAI,CAAC,CAAC;IACjD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAED,oBACIT,OAAA;IAAKc,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAChCf,OAAA;MAAAe,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BnB,OAAA,CAACH,YAAY;MAACuB,QAAQ,EAAET;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvCnB,OAAA;MAAAe,QAAA,EACKZ,UAAU,CAACkB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC5BvB,OAAA;QAAAe,QAAA,EAAgCO,QAAQ,CAACE;MAAI,GAApCF,QAAQ,CAACG,WAAW;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CACrD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACjB,EAAA,CAvCID,kBAAkB;AAAAyB,EAAA,GAAlBzB,kBAAkB;AAyCxB,eAAeA,kBAAkB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}