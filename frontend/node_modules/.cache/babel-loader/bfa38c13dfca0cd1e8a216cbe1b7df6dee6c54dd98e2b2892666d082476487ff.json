{"ast":null,"code":"var _jsxFileName = \"/home/alexxpain/shop/frontend/src/components/admin/UserManagement.jsx\",\n  _s = $RefreshSig$();\n// UserManagement.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // You'll need Axios for making HTTP requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserManagement = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [newUser, setNewUser] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  useEffect(() => {\n    // Fetch the list of users from your API when the component mounts\n    fetchUsers();\n  }, []);\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get('localhost:3001/api/users'); // Replace with your API endpoint\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setNewUser({\n      ...newUser,\n      [name]: value\n    });\n  };\n  const addUser = async () => {\n    try {\n      const response = await axios.post('localhost:3001/api/users', newUser); // Replace with your API endpoint\n      setUsers([...users, response.data]);\n      setNewUser({\n        username: '',\n        email: '',\n        password: ''\n      });\n    } catch (error) {\n      console.error('Error adding user:', error);\n    }\n  };\n  const removeUser = async userId => {\n    try {\n      await axios.delete(`localhost:3001/api/users/${userId}`); // Replace with your API endpoint\n      const updatedUsers = users.filter(user => user.user_id !== userId);\n      setUsers(updatedUsers);\n    } catch (error) {\n      console.error('Error removing user:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Username\",\n        value: newUser.username,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: newUser.email,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: newUser.password,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addUser,\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.username, \" - \", user.email, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeUser(user.user_id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)]\n      }, user.user_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(UserManagement, \"rUWjk/O4Pk4A+NY4Wc1XOBnbQpk=\");\n_c = UserManagement;\nexport default UserManagement;\nvar _c;\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UserManagement","_s","users","setUsers","newUser","setNewUser","username","email","password","fetchUsers","response","get","data","error","console","handleInputChange","event","name","value","target","addUser","post","removeUser","userId","delete","updatedUsers","filter","user","user_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","map","_c","$RefreshReg$"],"sources":["/home/alexxpain/shop/frontend/src/components/admin/UserManagement.jsx"],"sourcesContent":["// UserManagement.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // You'll need Axios for making HTTP requests\n\nconst UserManagement = () => {\n    const [users, setUsers] = useState([]);\n    const [newUser, setNewUser] = useState({\n        username: '',\n        email: '',\n        password: '',\n    });\n\n    useEffect(() => {\n        // Fetch the list of users from your API when the component mounts\n        fetchUsers();\n    }, []);\n\n    const fetchUsers = async () => {\n        try {\n            const response = await axios.get('localhost:3001/api/users'); // Replace with your API endpoint\n            setUsers(response.data);\n        } catch (error) {\n            console.error('Error fetching users:', error);\n        }\n    };\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setNewUser({\n            ...newUser,\n            [name]: value,\n        });\n    };\n\n    const addUser = async () => {\n        try {\n            const response = await axios.post('localhost:3001/api/users', newUser); // Replace with your API endpoint\n            setUsers([...users, response.data]);\n            setNewUser({\n                username: '',\n                email: '',\n                password: '',\n            });\n        } catch (error) {\n            console.error('Error adding user:', error);\n        }\n    };\n\n    const removeUser = async (userId) => {\n        try {\n            await axios.delete(`localhost:3001/api/users/${userId}`); // Replace with your API endpoint\n            const updatedUsers = users.filter((user) => user.user_id !== userId);\n            setUsers(updatedUsers);\n        } catch (error) {\n            console.error('Error removing user:', error);\n        }\n    };\n\n    return (\n        <div className=\"user-management\">\n            <h1>User Management</h1>\n            <form>\n                <input\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder=\"Username\"\n                    value={newUser.username}\n                    onChange={handleInputChange}\n                />\n                <input\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    value={newUser.email}\n                    onChange={handleInputChange}\n                />\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    value={newUser.password}\n                    onChange={handleInputChange}\n                />\n                <button type=\"button\" onClick={addUser}>\n                    Add User\n                </button>\n            </form>\n            <ul>\n                {users.map((user) => (\n                    <li key={user.user_id}>\n                        {user.username} - {user.email}\n                        <button onClick={() => removeUser(user.user_id)}>Remove</button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default UserManagement;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}