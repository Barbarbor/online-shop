{"ast":null,"code":"var _jsxFileName = \"/home/alexxpain/shop/frontend/src/components/forms/ProductForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductForm = ({\n  onSubmit,\n  categories,\n  subcategories\n}) => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    reset\n  } = useForm();\n  const [photoPath, setPhotoPath] = useState(''); // State to store the photo path\n\n  const handleFormSubmit = data => {\n    data.CategoryId = parseInt(data.CategoryId);\n    data.SubcategoryId = parseInt(data.SubcategoryId);\n    data.photography_url = photoPath; // Set the photo path in the form data\n    onSubmit(data); // Call the onSubmit prop with the form data\n    reset(); // Reset the form after submission\n    setPhotoPath(''); // Reset the photo path\n  };\n  // Function to handle file input change and get the file path\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    // Get the path of the selected file (assuming it's an image)\n    setPhotoPath(URL.createObjectURL(file));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(handleFormSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Product Name\",\n      ...register('name', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Product Description\",\n      ...register('description', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Product Price\",\n      ...register('price', {\n        required: true,\n        valueAsNumber: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"productImage\",\n      accept: \"image/*\" // Accept only image files\n      ,\n      onChange: handleImageUpload // Handle file input change\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      ...register('CategoryId', {\n        required: true,\n        valueAsNumber: true\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: category.id,\n        children: category.name\n      }, category.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      ...register('SubcategoryId', {\n        required: true,\n        valueAsNumber: true\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Subcategory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), subcategories.map(subcategory => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: subcategory.id,\n        children: subcategory.name\n      }, subcategory.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductForm, \"DJJ8WNU5XePgpaHAl0eKQHbMuE8=\", false, function () {\n  return [useForm];\n});\n_c = ProductForm;\nexport default ProductForm;\nvar _c;\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"names":["React","useState","useForm","jsxDEV","_jsxDEV","ProductForm","onSubmit","categories","subcategories","_s","register","handleSubmit","reset","photoPath","setPhotoPath","handleFormSubmit","data","CategoryId","parseInt","SubcategoryId","photography_url","handleImageUpload","event","file","target","files","URL","createObjectURL","children","type","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","valueAsNumber","name","accept","onChange","value","map","category","id","subcategory","_c","$RefreshReg$"],"sources":["/home/alexxpain/shop/frontend/src/components/forms/ProductForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\n\nconst ProductForm = ({ onSubmit, categories, subcategories }) => {\n    const { register, handleSubmit, reset } = useForm();\n    const [photoPath, setPhotoPath] = useState(''); // State to store the photo path\n\n    const handleFormSubmit = (data) => {\n        data.CategoryId = parseInt(data.CategoryId);\n        data.SubcategoryId = parseInt(data.SubcategoryId);\n        data.photography_url = photoPath; // Set the photo path in the form data\n        onSubmit(data); // Call the onSubmit prop with the form data\n        reset(); // Reset the form after submission\n        setPhotoPath(''); // Reset the photo path\n    };\n    // Function to handle file input change and get the file path\n    const handleImageUpload = (event) => {\n        const file = event.target.files[0];\n        // Get the path of the selected file (assuming it's an image)\n        setPhotoPath(URL.createObjectURL(file));\n    };\n\n    return (\n        <form onSubmit={handleSubmit(handleFormSubmit)}>\n            <input\n                type=\"text\"\n                placeholder=\"Product Name\"\n                {...register('name', { required: true })}\n            />\n\n            <textarea\n                placeholder=\"Product Description\"\n                {...register('description', { required: true })}\n            />\n\n            <input\n                type=\"number\"\n                placeholder=\"Product Price\"\n                {...register('price', { required: true, valueAsNumber: true })}\n            />\n\n            {/* File input for Photography URL */}\n            <input\n                type=\"file\"\n                name=\"productImage\"\n                accept=\"image/*\" // Accept only image files\n                onChange={handleImageUpload} // Handle file input change\n            />\n\n            <select {...register('CategoryId', { required: true, valueAsNumber: true })}>\n                <option value=\"\">Select Category</option>\n                {categories.map((category) => (\n                    <option key={category.id} value={category.id}>\n                        {category.name}\n                    </option>\n                ))}\n            </select>\n\n            <select {...register('SubcategoryId', { required: true, valueAsNumber: true })}>\n                <option value=\"\">Select Subcategory</option>\n                {subcategories.map((subcategory) => (\n                    <option key={subcategory.id} value={subcategory.id}>\n                        {subcategory.name}\n                    </option>\n                ))}\n            </select>\n\n            <button type=\"submit\">Add Product</button>\n        </form>\n    );\n};\n\nexport default ProductForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}